<!-- grid container -->
<div class="grid grid-cols-1 gap-4">
  <!-- Room name block -->
  <div class="text-center col-span-1">
    <%= @room.name %>
  </div>
  <!-- search bar block -->
  <div class="flex justify-center col-span-1">
    <form id="search-form" class="search-form flex items-center border-b border-b-2 border-teal-500 py-2 w-1/2">
      <input id="form" class="appearance-none bg-transparent border-none w-full text-gray-700 mr-3 py-1 px-2 leading-tight focus:outline-none" type="text" placeholder="Chercher une musique sur YouTube" aria-label="Video">
      <input type="submit" value="Search" class="flex-shrink-0 bg-teal-500 hover:bg-teal-700 border-teal-500 hover:border-teal-700 text-sm border-4 text-white py-1 px-2 rounded">
    </form>
  </div>
  <!-- results block -->
  <ul id="results"></ul>

  <div class="col-span-1 flex justify-center">
  <div id="player"></div>
  </div>
  <script>
      // 2. This code loads the IFrame Player API code asynchronously.
      var firstMusic = "<%= @first_music.url %>"
      var tag = document.createElement('script');

      tag.src = "https://www.youtube.com/iframe_api";
      var firstScriptTag = document.getElementsByTagName('script')[0];
      firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

      // 3. This function creates an <iframe> (and YouTube player)
      //    after the API code downloads.
      var counter = 1;
      var videoId = null;
      var player;
      function onYouTubeIframeAPIReady() {
        player = new YT.Player('player', {
          height: '360',
          width: '640',
          videoId: firstMusic,
          events: {
            // 'onReady': onPlayerReady,
            'onStateChange': onPlayerStateChange
          }
        });
      }

      // 4. The API will call this function when the video player is ready.
      function onPlayerReady(event) {
        event.target.playVideo();
      }

      // 5. The API calls this function when the player's state changes.
      //    The function indicates that when playing a video (state=1),
      //    the player should play for six seconds and then stop.
      var done = false;
      function onPlayerStateChange(event) {
        if (event.data === 0) {
          counter += 1;
          console.log(counter);
          videoId = document.getElementById(`${counter}`).innerText
          console.log(videoId);
          event.target.loadVideoById(`${videoId}`);
          // onYouTubeIframeAPIReady();
        }
      }
      function stopVideo() {
        player.stopVideo();
      }
    </script>
  <!-- music list div -->
  <div class="bg-gray-500 col-span-1 flex justify-center">
    <% @counter = 0 %>
    <ul id="videos-container">
    <% @musics.each do |music| %>
      <% @counter += 1 %>
      <%= render 'musics/video', music: music, counter: @counter %>
    <% end %>
    </ul>
    <% @users.each do |user| %>
      <%= user.name %>
    <% end %>
  </div>
</div>
